name: Auto Format
on:
  pull_request:
    types: [opened, synchronize, reopened]  # Run on new PRs and when commits are pushed to the PR

permissions:
  contents: write   # allow this workflow to push to the repo


jobs:

  Format:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.1'

      - name: Install Poetry
        run: pip install poetry

      - name: Configure Poetry to Use Virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Install Dependencies
        run: poetry install

      - name: Run Black (check only)
        id: black_check
        continue-on-error: true 
        run: |
          source .venv/bin/activate
          black --check .  # Check if formatting is needed

      - name: Auto-format and push if needed
        if: steps.black_check.outcome == 'failure'
        run: |
          source .venv/bin/activate
          black .  # Auto-fix formatting
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "chore: auto-format code"
          # Push to the PR's branch
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          git push origin "HEAD:$BRANCH_NAME"

  Errors:
    needs: Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.1'

      - name: Install Poetry
        run: pip install poetry

      - name: Configure Poetry to Use Virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Install Dependencies
        run: poetry install

      - name: Run Ruff
        run: |
          source .venv/bin/activate
          ruff check .

  Tests:
    needs: Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.1'

      - name: Install Poetry
        run: pip install poetry

      - name: Configure Poetry to Use Virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Install Dependencies
        run: poetry install

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          coverage run -m pytest -v -s

      - name: Generate Coverage Report  
        run: |
          source .venv/bin/activate
          coverage report -m
